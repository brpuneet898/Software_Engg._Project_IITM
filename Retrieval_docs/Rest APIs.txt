restful apis using python flux so this will be a recapsulation for the scene because you have to develop the project which is in software engineering using python flux right so we'll briefly see how the restful apis could be built and will start with documentation and designing using open API so open API version right now we are using that's a 3.0.3 right and the documentation what we'll start with will be using for that the Swagger editor right so for Swagger if you want to know details about the striker you can go to the Swagger documentation which is available on this particular link this is wiper editor so once you open the speaker editor it basically gives you some example right so uh a documentation for example apis which is basically representing a pet store so for that you are having this sample API is already created you can just try with them but we will learn how we can create API for our own application so let us assume very small application that will have uh bookstore suppose so we'll have a table called as a book so inside The Book Table there are three attributes so which are book ID book name and book price right so as I told the table name is book so which will have the following thing it will have a book ID which is our type integer then we'll have book name which is of type string and will have book price which is the floating point right so this is we need to do and we want this to be a PK primary key and it will be also generated automatically so uh we want to show two operations through our apis one is just a post we need to add a book to the table and secondly again that's by giving a book ID you want to read we want to retrieve the book information right from the table so that is what we want to do so let us start with the documentation right so what I do for the time being I'll clear the default what I am creating okay so let us start from the scratch so we'll have open API so the version we'll be using as discussed like it's a 3.0.3 okay so now we have to add certain descriptions so for that you have to go for add info so you have to give a title for your API so say I name it as a book API description I write API for adding a book and and getting book details version suppose I gave this this so I'm not putting all other information if you want you can put them I'm just adding it okay so we are getting this we need to add our server information in which this API will be deployed so for the time being I am keeping the local server that's a 127.0.0.1 and the port ik 5000. okay so now I have to define the end point the path for my API say I give it as a book and give some description to add a book says add path right so you can see it's appeared over here I have to Define operation so in this endpoint I'll put my post operation through which I will be adding a book inside my tablet right so book I suppose description to add a book the same thing again operationality I'm giving just one it has to be unique throughout your API right so just I say add application okay so it's added right so you need to remember one more thing whenever you are making a post right uh post API so you need to send send a request object that's basically in this case we'll have the name of the book as well as the price of the book which will be added inside your table and the book ID will be generated automatically okay so to create the request object we add it over here right so this is the request body you are defining here so I've just copy paste it this is the code so what you have you have been saying the content type so the content type is suggestion type because you want to send the Json object the type is the object now what are the properties of the objects as we have already discussed we are going to send the book name which is of type string you can keep some example over here and the book price which is of number type and say the price is something important 400 right so this is the request body I have added right we have to write it now you can give certain example respawn example right so for book endpoint for the Post what I do I want to add certain responses so 201 it's basically means for a success right so what I do I say whenever it's a success we're supposed to get back the particular book object which is created inside our table so I name it as a sample 201 example so what we get as a result so get a Json object so which will have the book ID which will be in this particular format suppose it's a 10 book name I say it's a C plus plus let me give the same thing what I have over here C plus sorry programming in C plus plus foreign and a book price so which is given as the 400 year right so this is added I say at response okay you can see it's got added now see for each response you need to suppose to add a description so just add a description tag and specify that what this particular code means for so it specifically says success right so your request is successful return newly created object I cannot keep colon again so you can give a dash rather yeah this is the message I gave okay so you have to remove this now if you just open it's add a book and this is the input body right this is the request body and this is the response body right okay so this is for the success now what will happen if there is an error so I can give add example response for book for post now let it be it is the 500 so as you know 500 is for Server internal error right so I say again adjacent it is sample 500 example and I said so internal error okay so for this also we need to give some description description it's a internal either right okay so what else we can have we have the success we are having the internal error so what about we are sending a bad request like uh where not sending the proper request body so something is missing right or the format is different the type is different so so again for the book that is the end point post so now I Define it as a 400 Json and this is the sample 400 response this is not example I should correct it everywhere so this is a bad request okay so again here I should give the description which say it is a bad request rest are done I'll just uh here instead of example I'll make them as a responses look much meaningful variants response right and I'm not giving anything default okay so I think it is done here for post so this is my description this is the body of the request this is where my response code 201 means the success it returns back with a newly created object in composition object these are the errors 400 it's a bad request 500 it's internally that's it so now let us go for creating another path so it will have the get operation so it's a book slash it is the search by the book ID right okay so I give to get book details okay so the path got added so let me have the operation to get book details by book ID so operation is 2 I add it okay so this is saying I need to define the book ID so it's the same way I have requested over here I have created over here this uh kind of request body the similar thing I need to also Define this book ID what it is and what is its type let us go for it so it's basically we'll call it as a parameter right so after description will go for having the parameter okay so the parameter have just added so to the indentation I think it's okay so the parameter is book underscore ID it's required is true it's must to be given right it should be specified in the path it becomes part of the URL and this is an integer and this is an example how should we give the input so if you just look at how the gate is appearing now choose the thing like book ID we need to specify over here which should be like this right okay now what about the response right first whenever it's a success so forget the success is 2 203 right so it's a this then gate then it's a 203 suggestion okay it's a sample two zero three response so we'll get back the object for which we are pairing with right so uh book ID suppose I get it as a 10. then book name where creating as a programming in C plus plus so this is just the format right book price so 400. so that's all so we need to add this Okay so like the previous one again we need to put a description so it's a success just delete this so you can see it's basically returning as a Json object so what about your failure it may happen you are sending the book ID but there is no book belongs to that iot so that's that's basically the resource not found kind of thing so that's a four zero four you will say book not found right so if I want to build something like that it's a kit say go for four zero four it's a Json it's a sample four zero four response so we just say book not font right so again description description I say book not found right so this is one and always there could be an internal error so that's 500 so that will so you can add so this gate is the response code 500 Json sample 500 response I write internal error right internal error I can just add some description so description say internal error right Okay so we are done basically so you can see the things are already created so what we can do you can download the Y A ml file so this is the file it's basically it will be in the download folder of my this thing this is the thing open API 3 okay now I have opened this insomnia software so you can download and install your machine so this is useful for testing what the documentation you have created along with your particular code the QR code perform as per the documentation what you have provided to it okay let me first yeah so I've added this so this is the documentation how it's looking like in insomnia right okay now we'll go for the code the implementation rather for the apis and we'll find out how the testing also can be done okay for the implementation purpose we have started with some basic codes so please make sure this particular modules are installed inside your machine so next if you look at the code so using SQL Alchemy we have defined the table so which is named as book and having the attribute search book ID book name and Book price bookite is an integer which is also a primary key book name is a string which is not null then we are having Book price which is the float which is also a not null right now this is the instruction to create the DB okay so let us first start with creating the class for our API so let us name it as a for kPa class now as per our requirement will have the method gate and post so let us have the methods post it's an instance method we need to make a self and at the end I should have a return so we'll Define the body afterwards so it's different get self return now uh here in the gate along with the cell I need to also pass the book ID because that is the parameter by which we need to select the book detail right Okay so next inside the post what I need to do see we need to get the request body and we need to pass pass the request body appropriately so that we can extract the book name and the book price information so that that could be inserted into our table right so for parsing what we do we are going to use this particular class re-parse right so inside the reports class there is a method called as a request parser which will create us this create book object and inside the create book we create two arguments book name and Book price so we Define the types as string for the book name and float for the Book price we make both our required property and we keep the corresponding error messages right if this particular argument is not supplied what kind of error will be shown this bundled error equal to True makes all the error messages to be shown at the same time now how this create book object can be used to extract the book name as well as Book price that is what we want to see here that okay so what we do first we create args equal to create book okay so dot parse abs right so now from the arcs object we can get the book name as well as the book price so the book name will be arcs dot get book name and Book price dot get book price so once we get these two information right now we can create a book object as a book is nothing but a book so where the book name will pass as a book name and Book price will pass as a book price so book object got created right now I have to add it to the DB so it's a DB dot session right so in the session I need to add the object book and finally to save it permanently I have to do a DB dot comment right that's all tv.session Dot okay so it is saved now once the book object is saved what you need to do you need to return the newly saved object booked object to the user right so it's basically return back the newly created boot object as a object Json object right so the first thing you can do you can directly create the Json object of the book whatever the book object you have created over here and return it back back or there is a way you can serialize this in a Json object and you can send it back so for that you need to go for certain procedure right so what you need to do you need to First specify the output format so let us specify the output format as output book equal to so I should say book name sorry first it will start with the book ID which is uh integer right so book ID is the attribute which will be a Fields Dot integer and then you will have book name which will be a fields.string since dot string then you'll have book underscore price which will be field start float right so this is the syntax integer yeah this is the basically the syntax or the format in which we need to return the book object in our Json format right so now to do the serialization automatically we need to use our decorator right so you need to make this function as a decorated function so which decorator we need to use so there is called Marshall width right so Marshall width we need to also keep the format so format we have already created sets output underscore book output underscore book okay just let me check it once Okay so once you have done this whenever you are returning you can just return the book objects it will be automatically get serialized into the given format and you have to give the code right so 201 is the success group okay let us go for coding with the gate so I want here also if I get a match then it has to be all returned as an object right so this also will be the marshalled with the same thing will have the output the format right so the format is output book all right sets output book one minute just to help me something I have to mention here resources right okay so now I have to do a query in my DB right so how to do that we'll have book so we want to get back the book object so we say this is the book class Dot query Dot filter by now we need to keep the particular clause the Clause is the book ID must be the book ID right and we take the first match ok so we already got the book now if there is a book if the book object returns successfully uh we get the book object successfully then it should return the book objects it will be automatically serialized we don't have to do anything sets are 203 but else the book is not found so it's basically the ah four not four right so the best way to deal with it you directly call for a boat rather than returning so you can see the code is 404 and you can specify a message to be for this particular code that is book not found right okay so we have defined the method next thing is left we need to Define the end point for our API operations our API inputs okay so we'll have API right API Dot add resource okay so the class is book API and our endpoints are slash book and slash book slash book ID check out this is triangular bracket right and uh since this is an integer you need to explicitly say it's a hint here so you can specify it like this and put this in point in a double port okay okay so we are almost done before I'll run just a final check of the code and find out I'll make this spelling mistake and maybe you can give some space and take anything else is there this looks okay to me so I'll save this and open the terminal they say python app Dot pi right so okay it is executing so uh we'll go for the insomnia okay so I'll say try out I want to give a book name fundamental of software engineering is the book name and the price is 600 so I have already tested this so I have already inserted few books if I execute this you can see the status quote is 201 means a success and it say the book ID generated five because already four books are there I've added already before doing this and the book name is fundamental of software engineering now if I go for ah testing the gate right so try out so I gave it so what does this the ID was I degenerated it was five right so I just give it as a 5. I say execute so let us check the status quo this is 203 which says success right and we are getting these five fundamental of software engineering and 600. so it is behaving as per the requirement uh just giving something wrong so I give something 10. right so there is no book available of this particular name so it's basically throws uh it returns a 104 which say not found right so it's working nicely okay so ah we are done but before we close it the suggestion is uh you can again go back to your app tab one and that particular module where you have learned the development of the restful API please go through once again and look at into the details before you really start your coding okay so uh I think it's helpful so thank you thank you very much