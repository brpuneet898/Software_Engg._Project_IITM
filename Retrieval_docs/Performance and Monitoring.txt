videos we looked at various deployment techniques right so now that our code is deployed we have to ensure and monitor that the performance of the application is as per the acceptable standards right so now in this video we are going to look at ways in which we can improve the performance of our web applications so what are some ways in which we can improve the performance of our software so one way is to do caching right so what is caching so caching stores results of common operations in memory right and this helps to reduce the load on servers right so for example when the client requests some data right so instead of fetching that data from the database right it can retrieve it from the memory right and retrieving from memory is faster right so if there are common queries which are executed and if there hasn't been any changes in the database right these queries can be stored in memory and it can be fetched from the memory right and there are different tools which help us in caching memcache this one redis is another right and there are also different levels of caching right so the first level is at the web browser itself right so the web browser itself has a cache right and it the previously visited Pages can be reused right and it contains a copy of previously visited pages right and after verifying from the server that the page hasn't been changed the web browser can load the page from the cache right otherwise even at the web server there are page caches so instead of maybe accessing the database the web server can send the page web page which is stored in its cache to the client and caches can happen in the database also right so the database can have a query cache which consists of results of recent queries which haven't changed right and instead of querying the database again the database can return the results from the query cache right to the web server and then to the client so caching is an important way in which we can improve the performance of our system now another way is to use task queues right so let's say as our application or our website grows right there are a lot of resource and time consuming tasks which happen right for example you want to send an email or a notification to thousands of users right or you want to create or update database records right for example if you want to delete a user then you have to delete all data associated with that user right and these tasks need not be executed immediately right you can notify the user that these tasks will be executed and maybe send a notification later to them once it has been completed right and this can be done using what is known as an asynchronous work queue right and it is asynchronous because it is executed outside the normal HTTP request or response cycle right so let's say we want to send an email to a user right that's a functionality right so usually in the normal request response cycle what happens so you send a request to the server saying send an email to my friend the server processes that request actually sends an email and sends a response saying that okay the email has been set however this is not scalable for let's say if you want to send an email to thousands of users right you cannot expect the user to wait for the response after processing or sending email to thousands of users right so what we do is we send this task to a asynchronous work queue so what does this work queue consist of it consists of personally it consists of a queue of jobs which need to be performed and para and Associated parameters right and not only that it contains a pool of workers right that can take multiple jobs from the queue and performed right so and notice that it's not just one worker which is performing uh or processing the request right there are many workers which can divide the work and this results in much lesser time right and another Advantage is that let's say if you are anticipating high traffic or higher traffic than normal you can dynamically increase the pool of workers so that the jobs can be completed in lesser time now another way to improve the performance of your application is to make sure that your web pages load and render quickly right and web applications contain lot of static content like HTML CSS JavaScript images right and it's very important that these elements are loaded quickly so you might be thinking why is it so important right and maybe all of this is just text and what difference can a few seconds make right well there is a lot of evidence which shows that loading is an important factor for performance right so here in this image you can see that the level of stress which is caused by mobile delays right it's as comparable as watching a horror movie right and even we as users when a particular page takes a little more than expected time to load maybe just even a few seconds more right we feel uncomfortable and agitated and not only that loading and rendering Pages quickly is important from a business standpoint as well right it affects the sales and business of your product right so there are several examples so in 2016 the site called AliExpress it increased the speed of their site by 30 percent and customer orders jumped by almost 10.5 percent right and back in the time in 2006 right Google just slowed down their search results by just half a second right but the noticeable effect was user request dropped by 25 percent so these and there are many other examples which show that loading and rendering Pages it affects the sales and business aspects of your product as well so now what are ways in which we can improve the loading and rendering times so one way is to Minify your code right so what does Minify mean Minify means to strip your code away from all spaces tabs extra white spaces Etc right so the code here on the left is a simple JavaScript function right which takes fahrenheit as a parameter and Returns the temperature in Celsius and there are various tools which help you Minify the code right and passing this to a minifier Right Strips it away from strips all the spaces away spaces tabs Etc and even it changes changes the parameter right and you can see that there's a saving of almost 41 percent right and this is just for a simple small code small function right and all of this can add up and result in a significant saving in space and hence your pages can load faster another method is to compress static pages right so there are tools like brotal and Jesus which will help you compress your web pages so now that we have seen some ways in which we can improve the performance of our applications now once our application has been deployed it is very important to constantly monitor it so why the reason being that even after sufficient testing right in the testing or the staging environment issues can still arise in the live environment right so for example during peak times right the CPU utilization the memory utilization like how is it getting affected right and even storage right how much is consumed versus how much is free so if there are a lot of database intensive activities and your disk gets filled up right and there's no more space available then you cannot add new things to the database and this can result in errors for the user right and you also need to check for Network bandwidth latency right for example how much time does it take for a user to get a response so that is known as latency is that getting affected that also has to be checked periodically So based on this the development and the operations teams they can respond and fix problems so how can we monitor our applications right so there are various monitoring tools right one simple type of tool are reporting tools right so what do reporting tools do they generate reports right so there are tools which if you provide a URL to them they analyze the page resources and they provide suggestions right and they check different metrics like your SEO and accessibility metric and they calculate your performance score the performance score of your website right and for example Lighthouse is a service provided by Google right you can install it's a Google Chrome extension and you can try it out and check the performance or the scores for performance score for various websites right so this is an example of the lighthouse monitoring tool so I asked Lighthouse to give me the reports for this very Sim dot Tech website and it gives you know several uh several metrics like you know how much time does it take what is the speed Index right so all this you can look up when you check lighthouse right now another important reason why we should monitor our app is to understand how customers behave right so for example you can analyze click streams right so with sequence of pages do your users visit the most right so your website might have several paths which the user can take right which of these paths are users taking the most right or you know how much time do they spend on a given page right what that is known as the think time or the dwell time dwell time on a particular web page right that is also an important metric which you can monitor now another metric is known as abandonment right so what is this so as we said saw that there are various flows in our application right there are various paths which the user can take right so for example you have a product page right then you click on buy now then you add your address then you add your payment details and then you finally pay and buy the product right so if this is a flow we can check what percentage of users abandon the flow right rather than complete the flow so completing the flow is a desirable path right for a business or for the product whereas if the user abandons this flow in between right that results in loss of business for for that particular customer right so what percentage of users abandon this flow is an important metric which we can monitor and there are several analytics tools as well which help you do this right so what they do is they you can embed a small piece of JavaScript in every page in your website right and this contains what is known as a tracking code and this tracking code sends the information to the Analytics tool each time the page is loaded right so for example this is an example of Google analytics right and this tells you write what yeah it gives you several metrics of what is happening after each interaction right where is where is the drop-off happening and so on so you can use Google analytics services in your websites as well right you have to just insert the you have to just sign up for the account and put a proper tracking code in your website so monitoring is useful for A and B testing also right so what is this a b testing so let's say you have version a of your app of your website which has some issues right maybe users are abandoned so maybe the abandonment is high right now to resolve this right you create another version right you that's a new workflow or maybe you might create a better UI right or you might do some changes so that these issues can be mitigated right and now what you can do is you can do a canary deployment right which is an incremental rollout where some users they get version a and other users get version B right and now you can monitor right both versions and check which version is better and what do we mean by better better might be in might mean more traffic right or maybe more dwell time on a particular page maybe more sales maybe lesser abandonment Etc right so there are various metrics which you can monitor right so monitoring is is useful for a b testing also to check whether the new version of your software or your application is better than the previous one so to summarize in this video we looked at different ways in which we can improve performance of our application through caching through using task queues and rendering Pages faster and we also looked at monitoring and why it is important right we looked at uh general report generating tools and analytics tools and we also saw that monitoring is important to understand customer Behavior as well as for a b testing