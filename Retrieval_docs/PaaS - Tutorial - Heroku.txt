our application into a platform as a service provider like hiroku right so let's say this is our very simple flask application right it has just one root and it just displays hello world on the browser right now before I actually start to deploy this on on a server what I'll do is to prepare this application so that it can be easily deployed on a platform like Heroku right so the first thing which we need to do is to install the necessary python modules and dependencies right so before that I will create a virtual environment right so that the packages which are installed here it doesn't conflict with other packages on my system right and now what I do is I go and activate this virtual environment right and now if I see if I want to see which all packages are available in this virtual environment I type pip and freeze right currently nothing is there and now I would like to install flask of course because this is a flask application and I also would want to install a module known as gionicon so G unicorn is used by hiroku to deploy this application so G unicorn is nothing but a web server Gateway interface and Heroku uses this to deploy python applications right so I install all of these and this in turn install some other packages and modules okay so now if I say if I type in PIP freeze I will see that these are the packages or modules which are available and these are their versions right and now what I need to do is I need to store these or the these fact packages and their version numbers right I need to store it into a file known as requirements Dot txt so what is present in requirements.txt is nothing but a list of packages which are required for this project right so hiroko looks at requirements.txt and installs these modules and with these version numbers okay and another important file which is needed is the proc file right and the proc file tells hiroku how we should run this application right so what it is telling Heroku is okay this is a web application right we are using g-unicorn web server right and in app.py which is our main file right in app.py there is a variable called app right and that is what has to be run right so that so in app.py run app so that is why we need to specify this in the prop file so that Heroku will know how to run this application so the proc file and requirements.txt are the two important settings which we need to do so now that we have done this now let's go and look at Heroku so this is the Heroku website right I've logged in so you can sign up and create an account right and on the top you can see a button called new which will help you create a new app right so hiroko is a platform as a service provider right it provides the entire platform for you the infrastructure and an easy way to deploy applications so I create a simple test class cap with a name right I can choose maybe Europe right and I create the app right and all that information about you know what are what is needed by Hero code to run python application so it is available here right so uh like you know installing the app dependencies right and uh the proc file right so all of this information is available online right so I looked that up and I set up my app all right now there are several ways in which you can uh deploy your application to Heroku right so one way is to use the Heroku command line interface okay so I have already installed this so the installing this is very easy right and then what you have to do is you have to login to Heroku you can type in Heroku login right go to your specific project right initialize a get Repository right and then create a remote repository which points to this this repository right and once we create this repository then what has to be done is normally how do we commit right we add files we commit and instead of pushing to uh some other GitHub repository right hiroko is the remote repository now and I push my master Branch to Heroku right so let's see how let's follow these steps and see if we can deploy our application right so now that I've set up everything the first thing I'll do is I will login and it's asking me to open the browser and login yeah so now I now this opens up login button and since I've already logged in it should say that I'm logged in okay now I go back to my terminal and it says that it's logged in right all right now that I've done this now I initialize the git Repository right and then what I do is I copy yeah I create a remote repository which points to this app okay now so it has set this git remote hero code to this right which points to the app at herok now I but now I can check my status right I have these files which have not come been committed yet so I will add my proc file app.py and requirements.txt the virtual environment files I need not add okay and then I can commit let's say with an initial combat right so it has been committed now what I can do is I will push right to the remote branch which is hiroku and I push my master Branch right now what this will do is this will not only push my my code to the hero course repository but it will also start deployment right so let's see how that happens right so now at remote it is now starting to build right things so it's installing python it's installing pip right and whatever was there and requirements dot txt it's installing all of that right and from the prop file it understood that it is a web application right and it has launched this right it has been deployed now let me check if this is working just copy it and open it in my web browser right and it's working so in this way you can deploy your application to the cloud right and if you go to Heroku you can also check out you know what all has happened so the build has succeeded right and it has been deployed right and uh it also provides metrics right so you need to yeah you need to add a credit card to install metrics and you can also add other resources right you can um so you can add data stores caching content management there are several things which you can do right so in this way we saw how we can deploy an application to a pass platform like Heroku right so there are several other platforms like Google app engine in which follow a similar process right and now if you want to make some modifications to your code right you simply follow the normal commit process right so let's say I want to just change this to let's say hello world new version right save it and right what I can do is just check the status right and I just add app.py and I commit with say change the message right and I get push to Heroku from my master branch right so then again it will commit as well as it will build the application for me right so it has been deployed now if I want to check it I have to just go here and maybe just refresh it right so the new version also has been deployed